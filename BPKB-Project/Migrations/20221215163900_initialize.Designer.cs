// <auto-generated />
using System;
using BPKB_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BPKBProject.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221215163900_initialize")]
    partial class initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BPKB_Project.Models.BPKB", b =>
                {
                    b.Property<string>("AgreementNumber")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("agreement_number");

                    b.Property<DateTime>("BPKBDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("bpkb_date");

                    b.Property<DateTime>("BPKBDateIn")
                        .HasColumnType("datetime2")
                        .HasColumnName("bpkb_date_in");

                    b.Property<string>("BPKBNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bpkb_no");

                    b.Property<string>("BranchID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("branch_id");

                    b.Property<DateTime>("FakturDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("faktur_date");

                    b.Property<string>("FakturNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("faktur_no");

                    b.Property<string>("LocationFK")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("location_id");

                    b.Property<string>("PoliceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("police_no");

                    b.HasKey("AgreementNumber");

                    b.HasIndex("LocationFK");

                    b.ToTable("bpkbs");
                });

            modelBuilder.Entity("BPKB_Project.Models.Location", b =>
                {
                    b.Property<string>("LocationID")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("location_id");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("location_name");

                    b.HasKey("LocationID");

                    b.ToTable("locations");

                    b.HasData(
                        new
                        {
                            LocationID = "L001",
                            LocationName = "Bali"
                        },
                        new
                        {
                            LocationID = "L002",
                            LocationName = "Jakarta"
                        },
                        new
                        {
                            LocationID = "L003",
                            LocationName = "Sumatera"
                        });
                });

            modelBuilder.Entity("BPKB_Project.Models.BPKB", b =>
                {
                    b.HasOne("BPKB_Project.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
